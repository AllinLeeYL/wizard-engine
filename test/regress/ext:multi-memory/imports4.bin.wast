(module binary
  "\00\61\73\6d\01\00\00\00\05\86\80\80\80\00\02\00"
  "\02\01\02\04\07\9d\80\80\80\00\02\0c\6d\65\6d\6f"
  "\72\79\2d\32\2d\69\6e\66\02\00\0a\6d\65\6d\6f\72"
  "\79\2d\32\2d\34\02\01"
)
(register "test")
(module binary
  "\00\61\73\6d\01\00\00\00\01\86\80\80\80\00\01\60"
  "\01\7f\01\7f\02\a8\80\80\80\00\02\04\74\65\73\74"
  "\0a\6d\65\6d\6f\72\79\2d\32\2d\34\02\00\01\08\73"
  "\70\65\63\74\65\73\74\06\6d\65\6d\6f\72\79\02\01"
  "\00\03\03\82\80\80\80\00\01\00\07\88\80\80\80\00"
  "\01\04\67\72\6f\77\00\00\0a\8c\80\80\80\00\01\86"
  "\80\80\80\00\00\20\00\40\01\0b"
)
(assert_return (invoke "grow" (i32.const 0x0)) (i32.const 0x1))
(assert_return (invoke "grow" (i32.const 0x1)) (i32.const 0x1))
(assert_return (invoke "grow" (i32.const 0x0)) (i32.const 0x2))
(assert_return (invoke "grow" (i32.const 0x1)) (i32.const 0xffff_ffff))
(assert_return (invoke "grow" (i32.const 0x0)) (i32.const 0x2))
(module $Mgm binary
  "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
  "\00\01\7f\03\82\80\80\80\00\01\00\05\87\80\80\80"
  "\00\03\00\00\00\00\00\01\07\91\80\80\80\00\02\06"
  "\6d\65\6d\6f\72\79\02\02\04\67\72\6f\77\00\00\0a"
  "\8c\80\80\80\00\01\86\80\80\80\00\00\41\01\40\02"
  "\0b"
)
(register "grown-memory" $Mgm)
(assert_return (invoke $Mgm "grow") (i32.const 0x1))
(module $Mgim1 binary
  "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
  "\00\01\7f\02\ab\80\80\80\00\02\04\74\65\73\74\0a"
  "\6d\65\6d\6f\72\79\2d\32\2d\34\02\00\01\0c\67\72"
  "\6f\77\6e\2d\6d\65\6d\6f\72\79\06\6d\65\6d\6f\72"
  "\79\02\00\02\03\82\80\80\80\00\01\00\05\85\80\80"
  "\80\00\02\00\00\00\00\07\91\80\80\80\00\02\06\6d"
  "\65\6d\6f\72\79\02\01\04\67\72\6f\77\00\00\0a\8c"
  "\80\80\80\00\01\86\80\80\80\00\00\41\01\40\01\0b"
)
(register "grown-imported-memory" $Mgim1)
(assert_return (invoke $Mgim1 "grow") (i32.const 0x2))
(module $Mgim2 binary
  "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
  "\00\01\7f\02\b4\80\80\80\00\02\04\74\65\73\74\0a"
  "\6d\65\6d\6f\72\79\2d\32\2d\34\02\00\01\15\67\72"
  "\6f\77\6e\2d\69\6d\70\6f\72\74\65\64\2d\6d\65\6d"
  "\6f\72\79\06\6d\65\6d\6f\72\79\02\00\03\03\82\80"
  "\80\80\00\01\00\05\85\80\80\80\00\02\00\00\00\00"
  "\07\88\80\80\80\00\01\04\73\69\7a\65\00\00\0a\8a"
  "\80\80\80\00\01\84\80\80\80\00\00\3f\01\0b"
)
(assert_return (invoke $Mgim2 "size") (i32.const 0x3))
