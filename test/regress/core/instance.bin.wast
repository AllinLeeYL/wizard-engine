(module definition $M binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\04\84\80\80\80\00\01\70\00\0a\05\83\80\80"
  "\80\00\01\00\01\0d\83\80\80\80\00\01\00\00\06\86"
  "\80\80\80\00\01\7f\01\41\00\0b\07\9a\80\80\80\00"
  "\04\04\67\6c\6f\62\03\00\03\74\61\62\01\00\03\6d"
  "\65\6d\02\00\03\74\61\67\04\00"
)
(module instance $I1 $M)
(module instance $I2 $M)
(register "I1" $I1)
(register "I2" $I2)
(module definition binary
  "\00\61\73\6d\01\00\00\00\01\8c\80\80\80\00\03\60"
  "\00\00\60\00\01\7f\60\00\01\70\02\d5\80\80\80\00"
  "\08\02\49\31\04\67\6c\6f\62\03\7f\01\02\49\32\04"
  "\67\6c\6f\62\03\7f\01\02\49\31\03\74\61\62\01\70"
  "\00\0a\02\49\32\03\74\61\62\01\70\00\0a\02\49\31"
  "\03\6d\65\6d\02\00\01\02\49\32\03\6d\65\6d\02\00"
  "\01\02\49\31\03\74\61\67\04\00\00\02\49\32\03\74"
  "\61\67\04\00\00\03\86\80\80\80\00\05\00\01\02\01"
  "\01\07\9a\80\80\80\00\04\04\67\6c\6f\62\00\01\03"
  "\74\61\62\00\02\03\6d\65\6d\00\03\03\74\61\67\00"
  "\04\09\85\80\80\80\00\01\03\00\01\00\0a\d9\80\80"
  "\80\00\05\82\80\80\80\00\00\0b\88\80\80\80\00\00"
  "\41\01\24\00\23\01\0b\8c\80\80\80\00\00\41\00\d2"
  "\00\26\00\41\00\25\01\0b\8f\80\80\80\00\00\41\00"
  "\41\01\36\02\00\41\00\28\42\01\00\0b\9a\80\80\80"
  "\00\00\02\40\02\40\1f\40\02\00\00\01\02\00\08\01"
  "\0b\00\0b\41\00\0f\0b\41\01\0f\0b"
)
(module instance)
(assert_return (invoke "glob") (i32.const 0x0))
(assert_return (invoke "tab") (ref.null))
(assert_return (invoke "mem") (i32.const 0x0))
(assert_return (invoke "tag") (i32.const 0x0))
(module definition binary
  "\00\61\73\6d\01\00\00\00\01\8c\80\80\80\00\03\60"
  "\00\00\60\00\01\7f\60\00\01\70\02\d5\80\80\80\00"
  "\08\02\49\31\04\67\6c\6f\62\03\7f\01\02\49\31\04"
  "\67\6c\6f\62\03\7f\01\02\49\31\03\74\61\62\01\70"
  "\00\0a\02\49\31\03\74\61\62\01\70\00\0a\02\49\31"
  "\03\6d\65\6d\02\00\01\02\49\31\03\6d\65\6d\02\00"
  "\01\02\49\31\03\74\61\67\04\00\00\02\49\31\03\74"
  "\61\67\04\00\00\03\86\80\80\80\00\05\00\01\02\01"
  "\01\07\9a\80\80\80\00\04\04\67\6c\6f\62\00\01\03"
  "\74\61\62\00\02\03\6d\65\6d\00\03\03\74\61\67\00"
  "\04\09\85\80\80\80\00\01\03\00\01\00\0a\d9\80\80"
  "\80\00\05\82\80\80\80\00\00\0b\88\80\80\80\00\00"
  "\41\01\24\00\23\01\0b\8c\80\80\80\00\00\41\00\d2"
  "\00\26\00\41\00\25\01\0b\8f\80\80\80\00\00\41\00"
  "\41\01\36\02\00\41\00\28\42\01\00\0b\9a\80\80\80"
  "\00\00\02\40\02\40\1f\40\02\00\00\01\02\00\08\01"
  "\0b\00\0b\41\00\0f\0b\41\01\0f\0b"
)
(module instance)
(assert_return (invoke "glob") (i32.const 0x1))
(assert_return (invoke "tab") (ref.func))
(assert_return (invoke "mem") (i32.const 0x1))
(assert_return (invoke "tag") (i32.const 0x1))
(module definition $N binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\04\84\80\80\80\00\01\70\00\0a\05\83\80\80"
  "\80\00\01\00\01\0d\83\80\80\80\00\01\00\00\06\86"
  "\80\80\80\00\01\7f\01\41\00\0b\07\bb\80\80\80\00"
  "\08\05\67\6c\6f\62\31\03\00\05\67\6c\6f\62\32\03"
  "\00\04\74\61\62\31\01\00\04\74\61\62\32\01\00\04"
  "\6d\65\6d\31\02\00\04\6d\65\6d\32\02\00\04\74\61"
  "\67\31\04\00\04\74\61\67\32\04\00"
)
(module instance $I $N)
(register "I" $I)
(module definition binary
  "\00\61\73\6d\01\00\00\00\01\8c\80\80\80\00\03\60"
  "\00\00\60\00\01\7f\60\00\01\70\02\d5\80\80\80\00"
  "\08\01\49\05\67\6c\6f\62\31\03\7f\01\01\49\05\67"
  "\6c\6f\62\32\03\7f\01\01\49\04\74\61\62\31\01\70"
  "\00\0a\01\49\04\74\61\62\32\01\70\00\0a\01\49\04"
  "\6d\65\6d\31\02\00\01\01\49\04\6d\65\6d\32\02\00"
  "\01\01\49\04\74\61\67\31\04\00\00\01\49\04\74\61"
  "\67\32\04\00\00\03\86\80\80\80\00\05\00\01\02\01"
  "\01\07\9a\80\80\80\00\04\04\67\6c\6f\62\00\01\03"
  "\74\61\62\00\02\03\6d\65\6d\00\03\03\74\61\67\00"
  "\04\09\85\80\80\80\00\01\03\00\01\00\0a\d9\80\80"
  "\80\00\05\82\80\80\80\00\00\0b\88\80\80\80\00\00"
  "\41\01\24\00\23\01\0b\8c\80\80\80\00\00\41\00\d2"
  "\00\26\00\41\00\25\01\0b\8f\80\80\80\00\00\41\00"
  "\41\01\36\02\00\41\00\28\42\01\00\0b\9a\80\80\80"
  "\00\00\02\40\02\40\1f\40\02\00\00\01\02\00\08\01"
  "\0b\00\0b\41\00\0f\0b\41\01\0f\0b"
)
(module instance)
(assert_return (invoke "glob") (i32.const 0x1))
(assert_return (invoke "tab") (ref.func))
(assert_return (invoke "mem") (i32.const 0x1))
(assert_return (invoke "tag") (i32.const 0x1))
