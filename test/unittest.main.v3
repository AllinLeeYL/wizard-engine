// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Main entrypoint for running unit tests.
component unittest {
	def main(args: Array<string>) -> int {
		var matchers = Vector<GlobMatcher>.new();
		// Parse options first
		for (i < args.length) {
			var arg = args[i];
			if (TraceOptions.parse(arg)) {
				args[i] = null;
			} else if (arg.length > 0 && arg[0] == '-') {
				System.puts("Unknown option: ");
				System.puts(arg);
				System.ln();
				return 1;
			} else {
				matchers.put(GlobMatcher.new(arg));
			}

		}
		UnitTests.fatal = UnitTests.fatal || Trace.fatal;
		// Run the registered unit tests
		var count = 0, r: List<UnitTest>;
		for (l = UnitTests.list; l != null; l = l.tail) { // count and reverse list
			var t = l.head;
			if (matchers.length > 0) {
				var skip = true;
				for (i < matchers.length) {
					if (skip) skip = !matchers[i].matches(t.name);
				}
				if (skip) continue;
			}
			r = List.new(l.head, r);
			count++;
		}
		System.puts("##>");
		System.puti(count);
		System.puts(" unit tests\n");
		var fail = false;
		for (l = r; l != null; l = l.tail) {
			var u = l.head;
			var t = Tester.new(u.name);
			System.puts("##+");
			System.puts(u.name);
			System.ln();
			u.fun(t);
			if (t.ok) {
				System.puts("##-ok\n");
			} else {
				fail = true;
				System.puts("##-fail (");
				System.puts(t.msg);
				System.puts(")\n");
			}
		}
		return if(fail, 1, 0);
	}
}