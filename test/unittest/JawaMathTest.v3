// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

def T = UnitTests.registerT("jawa:math:", _, JawaMathTester.new, _);
def X = [
	T("exp", test_exp),
	T("log", test_log),
	()
];

class JawaMathTester(t: Tester) {
	def assertd(expected: double, got: double) {
		var exbits = u64.view(expected), gbits = u64.view(got);
		if (exbits != gbits) return t.fail2("expected double %x, got %x", exbits, gbits);
	}
}

def test_exp(t: JawaMathTester) {
	def f = JawaMath.exp;
	t.assertd(1, f(0));
	t.assertd(20.085536923187668, f(3.0));
	t.assertd(22.197951281441636, f(3.1));
	t.assertd(1.2340980408667956E-4, f(-9.0));
	t.assertd(3.3546262790251185E-4, f(-8.0));
	t.assertd(0.004086771438464067, f(-5.5));
	t.assertd(0.050287436723591865, f(-2.99));
	t.assertd(0.9048374180359595, f(-0.1));
	t.assertd(2.7182818284590455, f(1.0)); // TODO: 1-bit difference with Java/JavaScript?
	t.assertd(double.infinity, f(double.infinity));
	t.assertd(0, f(0.0d - double.infinity));
	t.assertd(double.nan, f(double.nan));
}

def test_log(t: JawaMathTester) {
	def f = JawaMath.log;
	t.assertd(1.6094379124341003, f(5));
	t.assertd(double.nan, f(-1));
	t.assertd(double.nan, f(-0.2));
	t.assertd(0.0 - double.infinity, f(0));
	t.assertd(-2.3025850929940455, f(0.1));
	t.assertd(0, f(1));
	t.assertd(0.4054651081081644, f(1.5));
	t.assertd(0.6931471805599453, f(2));
	t.assertd(0.9932517730102834, f(2.7));
	t.assertd(double.infinity, f(double.infinity));
	t.assertd(double.nan, f(0.0d - double.infinity));
	t.assertd(double.nan, f(double.nan));
}
