def STDIN = 0;
def EOF = -1;

def readStdin() -> string {
    var buf = StringBuilder.new();
    var ch = System.fileRead(STDIN);
	while (ch != EOF) {
		buf.putc(byte.!(ch));
		ch = System.fileRead(STDIN);
	}
    return buf.toString();
}

def splitWith(content: string, sep: byte) -> Vector<string> {
    var parts = Vector<string>.new();
    var buf = StringBuilder.new();
    for (i < content.length) {
        if (content[i] == sep) {
            parts.put(buf.toString());
        } else {
            buf.putc(content[i]);
        }
    }
    parts.put(buf.toString());
    return parts;
}

def vectorsEqual<T>(a: Vector<T>, b: Vector<T>, start: int, end: int, equal_fn: (T, T) -> bool) -> bool {
    if (start > end || end > a.length || end > b.length) {
        return false;
    }
    for (i = start; i < end; i++) {
        if (!equal_fn(a[i], b[i])) {
            return false;
        }
    }
    return true;
}

def main(args: Array<string>) -> int {
    var ref_trace_path = args[0];
    var ref_trace = splitWith(System.fileLoad(ref_trace_path), '\n');
    var generated_trace = splitWith(readStdin(), '\n');
    var i = 0, j = 0;
    while (i < ref_trace.length && j < generated_trace.length) {
        var ref_entry_list = splitWith(ref_trace[i], ';');
        var gen_entry_list = splitWith(generated_trace[j], ';');
        var len = ref_entry_list.length;
        var ref_type = ref_entry_list[0];
        var gen_type = gen_entry_list[0];

        if (!Strings.equal(ref_type, gen_type)) {
            if (Strings.equal(ref_type, "IG") || Strings.equal(ref_type, "ER")) {
                i++;
                continue;
            }
            return 1;
        }

        if (Strings.equal(ref_type, "IC") || Strings.equal(ref_type, "IR")) {
            // the func_index won't match up between the original module and the replay module,
            // so we only check the event type
            i++;
            j++;
            continue;
        }
        var all_match = true;
        if (Strings.equal(ref_type, "EC") || Strings.equal(ref_type, "TC")) {
            // check everything besides the func_index
            all_match = vectorsEqual(ref_entry_list, gen_entry_list, 2, len, Strings.equal);
        } else if (Strings.equal(ref_type, "T")) {
            all_match = vectorsEqual(ref_entry_list, gen_entry_list, 1, 4, Strings.equal)
                && Strings.equal(ref_entry_list[5], gen_entry_list[5]);
        } else if (Strings.equal(ref_type, "G")) {
            // global index might change in the replay module, so we only check the value
            all_match = Strings.equal(ref_entry_list[2], gen_entry_list[2]);
        } else if (Strings.equal(ref_type, "L") || Strings.equal(ref_type, "MG") || Strings.equal(ref_type, "TG")) {
            all_match = vectorsEqual(ref_entry_list, gen_entry_list, 1, len, Strings.equal);
        }
        if (!all_match) {
            return 1;
        }
        i++;
        j++;
    }
    return 0;
}