Prio	Component	Issue
-------------------------------
	runtime		Fast native memories (pointer, memmap)
	ctlxfer		more tests for greater depths
	interpreter	print value stack / call stack in tracing mode
	interpreter	support probes
	main		ability to execute modules
	main		repl for loading and running modules
	main		version / commit updater
	test		measure and report execution time of individual tests
	validator	more br tests
	validator	typecheck whole signatures at a time
	spec		is it legal to have 0-count funcs and no code section?
	trace		Move all tracing and rendering code into src/render ?
	trace		Reuse opcode renderer across calls
	binary		Parse names section

	ext		typed_functions
	ext		type_imports
	ext		gc
	ext		excecption_handling

Test Coverage
--------------------------------
Interpreter
	doCallHost of null host function
	doCallFunction of host function	
	pushFrame of EXTERNREF, FUNCREF, RefNullFunc locals
	traceCallHostFunction deeper than 0
	loop unbounded

Memory
	.new with OOM
	.read/write OOB for all elem sizes
	.copyD of null
	.size of null

SpecTestParser
	.parseCommand error
	.parseList boundary conditions
	.parseOneCommandForTesting boundary conditions
	.parseExpectedValue i64, f32, f64, refnull, refextern

BinParser
	invalid section code
	render invalid type con
	.readElemFuncIndexes of FUNCREF, FuncRef, ExternRef
	.readValueType of VEC128
	.readDataIndex max > explicit_data_count
	invalid import/export kind
	renderLimitFlags of shared
	readMemoryArg of full memory index
	readLabels exceeding maximum
	custom section name length too long
	readDataDecl with different flags settings
	readInitExpr readRefNull type
	readMemoryLimits expecting shared memory maximum
	decodeFunctionBody func count mismatch
	decodeFunctionBody with code validation
	readBlockType of double, vec128
	readBlockType with function types
	readRefType of function types
	readElemDecl

Values
	.f64 of underflow exponent
	.render of host function

ValueType
	.render of vec 128

Arrays
	.boundsCheck of null
	.map of null

Instantiator
	check data bounds of null memory
	check limits of Max.None
	check elem bounds of expressions
	checkBounds fails

Instance
	evalInitExpr of f32, f64, FUNCREF, EXTERNREF, global

HashMap<JawString>
	cache hit
	balance

JawaImportProcessor
	read_jtref of invalid primitive code, non Jawa type
	processCommand 0 length
	processCommand not a class/interface type

JawaClassType
	.isAssignableToI
	.isAssignableTo EXTERNREF

CodeValidator
	.checkArgs of null
	.readLocals exceeds maximum
	.mergeTypesAt, invalid block type
	end matching with let
	checkAlignment (loads/stores)
	table.init: element type mismatch

CtlXferTest
	0 entries

Result
	.equals of mismatched sizes

Opcodes
	.renderInstr of not found prefix
	.readBlockType .readValueType PARAM_INDEX
	.find with 0 prefix
Max
	.check of None
	.min of None

Utf8
	.findError of null

Strings
	.equals of null

StringBuilder
	.putx of u16

Stack
	.pop of empty stack
	.pushA with grow
	.resize

Decoder
	.read_x64leb with EOF
	.read_u64 with EOF
	.skip_bytes with EOF
	.check_bytes with EOF

JawaHostStubs
	.eval_ANEWARRAY with negative array size

Module
	.addDef of AbsTypeDecl
	.addDef of EventDecl

AbsTypeDecl
	.render of imported

BinBuilder
	.put_ValueType

ElemDetails
	.length of exprs

HostType
	.isAssignableTo

JawaInterfaceType
	.isAssignableTo
	.isAssignableToH

JawaArrayType
	.isAssignableTo
	.isAssignableToH

JawaArrayObjectOf<T>
	.jawaType

FunctionTable
	.copyT ValueTable, FunctionTable
	.copyE FunctionTable

ValueTypes
	.bound

Done
--------------------------------
	unit		Improve overall unit testing framework
	validator	bug: Unreachable in one-armed if-value
	wave		implementation to bootstrap Virgil
	instance	Write unit tests for instantiation
	interpreter	test host functions
	interpreter	multivalue blocks, loops
	ext		bulk_memory
	ext		reference_types
	ext		sign_extension
	ext		tail_call: interpreter
	ext		multiple_memories
	ext		non_trapping_fic
	spec		floating point opcodes
	interpreter	floating point
	ext		tail_call: opcodes and validation
	spec		spectest includes 0xFFFE and 0xFFFF special characters
	binparse	offsets for errors incorrectly buffer relative
	binparse	reduce type specialization of readMultiple<T>
	validator	check for mutability of global in write
	spec		subnormal floats
	spec		br_table popcount bug
	spec		br_table merging of types
	spec		binary LEB 5-byte limit
	spec		elements bugs
	spec		duplicate export name
	spec		invalid memory flags
	spec		parse unicode escapes in strings
	spec		assign to immutable global
	spec		invalid global flags
	spec		assert_trap of module: start function
	spec		UTF-8 encoding
	spec		br_if bugs
	util		use "def var" Virgil feature for .length
	spec		support _ in literals
	binparse	tests for streaming
	config		properly check config settings for decoding and running
	instance	move oom logic into instantiator, out of constructors
	trace		Always use StringBuffer.out(STDOUT)
	validator	multivalue blocks, loops
	test		spec test loader and runner
	interpreter	memory index decoding
	core		introduce Extension enum
	binparse	double check memory operand decoding
	validator	check alignment of memory operators
	interpreter	convert unit tests to params, results order
	binparse	write tests for binary decoding
