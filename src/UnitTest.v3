// Copyright 2019 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

component UnitTests {
	var list: List<UnitTest>;
	def register(name: string, fun: Tester -> ()) {
		list = List.new(UnitTest.new(name, fun), list);
	}
	def run(args: Array<string>) -> int {
		var count = 0, r: List<UnitTest>;
		for (l = list; l != null; l = l.tail) { // count and reverse list
			r = List.new(l.head, r);
			count++;
		}
		System.puts("#");
		System.puti(count);
		System.puts(" unit tests\n");
		var fail = false;
		for (l = r; l != null; l = l.tail) {
			var t = Tester.new();
			var u = l.head;
			System.puts("+");
			System.puts(u.name);
			System.ln();
			u.fun(t);
			if (t.ok) {
				System.puts("-ok\n");
			} else {
				fail = true;
				System.puts("-fail (");
				System.puts(t.msg);
				System.puts(")\n");
			}
		}
		return if(fail, 1, 0);
	}
}

class UnitTest(name: string, fun: Tester -> ()) { }
class Tester {
	var ok = true;
	var msg: string;
	def fail(msg: string) -> this {
		if (!ok) return;
		this.ok = false;
		this.msg = msg;
	}
}
