// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Decoder with additional utility methods for the interpreter.
class CodePtr extends Decoder {
	new(data: Array<byte>, err: ErrorGen) super(data, err) { }
	def skip_block_type() {
		var b = read_u8();  // TODO: read full i32 LEB for block type?
		match (b) {
			BpTypecon.RefFuncT.code,
			BpTypecon.RefNullFuncT.code,
			BpTypecon.AbstractT.code => read_u32leb();
		}
	}
	def skip_label() {
		read_u32leb();
	}
	def read_value_types() -> int {
		var count = int.!(read_u32leb()); // value count
		for (i < count) skip_value_type();
		return count;
	}
	def skip_local_decls() {
		var count = read_u32leb();
		for (i < count) {
			var d = read_u32leb();
			skip_value_type();
		}
	}
	def skip_value_type() {
		var b = read_u8();
		match (b) {
			BpTypecon.RefFuncT.code,
			BpTypecon.RefNullFuncT.code,
			BpTypecon.AbstractT.code => read_u32leb();
		}
	}
}
