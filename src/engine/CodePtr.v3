// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// DataReader with additional utility methods for the interpreter.
class CodePtr extends DataReader {
	new(data: Array<byte>) super(data) { }
	def skip_block_type() {
		var b = read1();  // TODO: read full i32 LEB for block type?
		match (b) {
			BpTypeCode.REF.code,
			BpTypeCode.REF_NULL.code,
			BpTypeCode.ABS.code => read_uleb32();
		}
	}
	def skip_label() {
		skip_leb();
	}
	def read_opcode() -> Opcode {
		var b = read1();
		return if(Opcodes.attributes[b].PREFIX, Opcodes.find(b, read_uleb32()), Opcodes.opcodes[b]);
	}
	def read_value_types() -> int {
		var count = int.!(read_uleb32()); // value count
		for (i < count) skip_value_type();
		return count;
	}
	def skip_local_decls() {
		var count = read_uleb32();
		for (i < count) {
			skip_leb();
			skip_value_type();
		}
	}
	def skip_value_type() {
		var b = read1();
		match (b) {
			BpTypeCode.REF.code,
			BpTypeCode.REF_NULL.code,
			BpTypeCode.ABS.code => skip_leb();
		}
	}
}
