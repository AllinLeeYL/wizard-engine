// Copyright 2021 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// An instantiated Wasm memory implemented using a Virgil byte array.
class V3Memory extends Memory {
	new(decl: MemoryDecl) super(decl) {
		var bytes = u64.!(decl.initial) << decl.log2_pageSize;
		if (bytes > int.max || decl.initial > Target.limit_memory_pages) {
			oom = true;
		} else {
			platform_specific_setData(Array<byte>.new(int.!(bytes)));
		}
	}
	def deallocate() {
		platform_specific_setData(null);
	}
	def grow(pages: u32) -> int {
		var current = u64.!(size());
		if (pages == 0) return int.!(current);
		var nsize = current + pages;
		var limit = decl.maximum.min(Target.limit_memory_pages);
		if (nsize > limit) return -1;
		var data = platform_specific_getData();
		var ndata = Array<byte>.new(int.!(nsize << decl.log2_pageSize));
		for (i < data.length) ndata[i] = data[i]; // TODO: use word copy
		platform_specific_setData(ndata);
		return int.!(current);
	}
}
