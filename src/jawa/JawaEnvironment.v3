// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// An environment (i.e. mapping from strings to classes/interfaces) for Jawa.
class JawaEnvironment(parent: JawaEnvironment) {
	private def decls = HashMap<JawaString, JawaDeclType>.new(JawaString.hashI32, JawaString.equals);

	def add(c: JawaDeclType) {
		decls[c.name] = c;
	}
	def lookup(name: JawaString) -> JawaDeclType {
		return decls[name];
	}
	def declareClass(name: JawaString, attrs: JawaClassAttr.set,
			sup: JawaClassType, intfs: Array<JawaInterfaceType>) -> JawaClassType {
		var prev = decls[name];
		if (prev != null) return JawaClassType.!(prev);
		var r = JawaClassType.new(name, attrs, sup, intfs);
		decls[name] = r;
		return r;
	}
	def declareInterface(name: JawaString, intfs: Array<JawaInterfaceType>) -> JawaInterfaceType {
		var prev = decls[name];
		if (prev != null) return JawaInterfaceType.!(prev);
		var r = JawaInterfaceType.new(name, intfs);
		decls[name] = r;
		return r;
	}
	def isStringType(t: JawaType) -> bool {
		return t == JawaTypes.STRING;
	}
}
