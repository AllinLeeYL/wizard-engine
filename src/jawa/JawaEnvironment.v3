// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// An environment (i.e. mapping from strings to classes/interfaces) for Jawa.
class JawaEnvironment(parent: JawaEnvironment) {
	def lookupClass(name: JawaString) -> JawaClass; // TODO
	def lookupInterface(name: JawaString) -> JawaInterface; // TODO
	def declareClass(name: JawaString, sup: JawaClass, intfs: Array<JawaInterface>) -> JawaClass; // TODO
	def declareInterface(name: JawaString, intfs: Array<JawaInterface>) -> JawaInterface; // TODO
	def internStringAsGlobal(str: JawaString) -> Global; // TODO
	def getArrayType(elem: JawaType) -> JawaExportedType {
		return JawaExportedType.new(JawaType.Array(elem)); // XXX: cache array types
	}
	def exportClass(c: JawaClass) -> JawaExportedType;
	def exportInterface(i: JawaInterface) -> JawaExportedType;
}

class JawaClass {
	def name: JawaString;
	def parent: JawaClass;
	def interfaces: Array<JawaType.Interface>;
	def instanceFields: Array<void>; // TODO
	def instanceMethods: Array<void>; // TODO
	def staticFields: Array<void>; // TODO
	def staticMethods: Array<void>; // TODO
}

class JawaInterface {
	def name: JawaString;
	def interfaces: Array<JawaType.Interface>;
	def instanceMethods: Array<void>; // TODO
	def getType() -> JawaType.Interface;
}
