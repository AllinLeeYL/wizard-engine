// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// An environment (i.e. mapping from strings to classes/interfaces) for Jawa.
class JawaEnvironment(parent: JawaEnvironment) {
	def lookupClass(name: JawaString) -> JawaClass; // TODO
	def lookupInterface(name: JawaString) -> JawaInterface; // TODO
	def declareClass(name: JawaString, sup: JawaClass, intfs: Array<JawaInterface>) -> JawaClass; // TODO
	def declareInterface(name: JawaString, intfs: Array<JawaInterface>) -> JawaInterface; // TODO
	def internStringAsGlobal(str: JawaString) -> Global; // TODO
	def getArrayType(elem: JawaType) -> JawaExportedType {
		return JawaExportedType.new(JawaType.Array(elem)); // XXX: cache array types
	}
	def exportClass(c: JawaClass) -> JawaExportedType;
	def exportInterface(i: JawaInterface) -> JawaExportedType;
}

class JawaClass {
	def name: JawaString;
	def parent: JawaClass;
	def interfaces: Array<JawaType.Interface>;
	var instanceFields: Array<JawaField>;
	var instanceMethods: Array<JawaMethod>;
	var staticFields: Array<JawaField>;
	var staticMethods: Array<JawaMethod>;
	def complete() -> bool {
		return instanceFields != null;
	}
}

class JawaInterface {
	def name: JawaString;
	def interfaces: Array<JawaType.Interface>;
	var instanceMethods: Array<JawaMethod>;
	def complete() -> bool {
		return instanceMethods != null;
	}
}

class JawaField(name: JawaString, typ: JawaType) { }
class JawaMethod(name: JawaString, params: Array<JawaType>, ret: JawaType) { }