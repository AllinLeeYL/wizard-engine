// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// An immutable UTF-16 string with a cached hashcode.
class JawaString(chars: Array<u16>) extends JawaObject {
	private var hashed: bool;
	private var hash: u32;

	def equals(that: JawaString) -> bool {
		if (this == that) return true;
		if (that == null) return false;
		var x = this.chars, y = that.chars;
		if (x.length != y.length) return false;
		for (i < x.length) {
			if (x[i] != y[i]) return false;
		}
		return true;
	}
	def hashCode() -> u32 {
		if (hashed) return hash;
		var r = 0u;
		for (i < chars.length) {
			r = r * 31 + chars[i];
		}
		hashed = true;
		return hash = r;
	}
	def render(buf: StringBuilder) -> StringBuilder {
		for (c in chars) buf.pututf8(c);
		return buf;
	}
}

// Utility methods associated with strings.
component JawaStrings {
	def of(s: string) -> JawaString {
		var chars = Array<u16>.new(s.length);
		for (i < s.length) chars[i] = s[i];
		return JawaString.new(chars);
	}
}