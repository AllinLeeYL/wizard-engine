// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

type Value {
	case Nil;
	case I32(val: u32);
	case I64(val: u64);
	case F32(bits: u32);
	case F64(bits: u64);
}
enum TrapReason {
	NONE,
	UNREACHABLE,
	MEM_OUT_OF_BOUNDS,
	UNALIGNED_ACCESS,
	DIV_BY_ZERO,
	DIV_UNREPRESENTABLE,
	REM_BY_ZERO,
	FLOAT_UNREPRESENTABLE,
	FUNC_INVALID,
	FUNC_SIG_MISMATCH,
	DATA_SEGMENT_DROPPED,
	ELEM_SEGMENT_DROPPED,
	TABLE_OUT_OF_BOUNDS,
	ERROR
}
component Values {
	def render(buf: StringBuffer, v: Value) -> StringBuffer {
		match (v) {
			Nil => buf.puts("(nil)");
			I32(val) => buf.put1("%d", val);
			I64(val) => buf.put1("%duL", val);
			F32(val) => buf.put1("f32:%x", val);
			F64(val) => buf.put1("f64:%x", val);
		}
		return buf;
	}
}