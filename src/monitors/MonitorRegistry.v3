// Copyright 2022 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A global registry of all monitors available, e.g. to be selectable by command-line options.
component MonitorRegistry {
	private var list: List<(string, Monitor)>;

	new() {
		register("loops", LoopMonitor.new());
	}

	// Register a new monitor with the given name.
	def register(name: string, m: Monitor) {
		list = List.new((name, m), list);
	}
	// Look up a monitor by its exact name, returning {null} if not found.
	def lookupName(name: string) -> Monitor {
		for (l = list; l != null; l = l.tail) {
			if (Strings.equal(name, l.head.0)) return l.head.1;
		}
		return null;
	}
	// Look up multiple monitors matching the given glob pattern.
	def lookupMultiple(pattern: string) -> List<Monitor> {
		var found: List<Monitor>;
		var matcher = GlobMatcher.new(pattern);
		for (l = list; l != null; l = l.tail) {
			if (matcher.matches(l.head.0)) found = List.new(l.head.1, found);
		}
		return found;
	}
}
