// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A utility to create error messages, output them to stdout, and return a value.
class ErrorBuilder extends StringBuilder {
	def render(code: WasmError, path: string, section: BpSection, error_index: int, error_pos: int, error_msg: string) -> this {
		puts(path);
		puts(":0x");
		putShortX(error_pos);
		if (section != BpSection.Unknown && error_index >= 0) {
			puts(":");
			puts(section.name);
			puts("[");
			putd(error_index);
			puts("]");
		}
		puts(": ");
		puts(error_msg);
		ln();
	}
	def exit<T>(val: T) -> T {
		this.send(Trace.STDOUT);
		return val;
	}
	def putShortX(val: int) -> this { // XXX: move into v3 lib/StringBuilder?
		var prev = false;
		for (i < 8) {
			var n1 = (val >>> 28) & 0xF;
			if (prev || n1 != 0 || i == 7) {
				putc(Chars.hexMap_u[n1]);
				prev = true;
			}
			val = val << 4;
		}
	}
}