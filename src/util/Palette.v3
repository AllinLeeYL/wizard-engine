// Copyright 2023 Wizard Authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Color palette for uniform coloring of Trace/Monitor outputs
component Palette {
	// default padding in no color mode
	// XXX: needed for rjustify to work correctly in no color mode
	def NOCOLOR	    = Array<byte>.new(TermColors.BLACK.length);

	// unhighlighted output
	var DEFAULT	    = NOCOLOR;
	var LNO		    = NOCOLOR;	    // line/byte number
	var FUNC	    = NOCOLOR;	    // function name 

	// for highlighting
	var ACTIVE	    = NOCOLOR;	    // for indicating selected/active
	var INACTIVE	    = NOCOLOR;	    // for indicating dead/inactive

	var COUNT	    = NOCOLOR;	    // any numeric value

	var VERY_HIGH	    = NOCOLOR;	    // for anything 'high', e.g. for hotness
	var HIGH	    = NOCOLOR;	    // for anything 'high', e.g. for hotness
	var MEDIUM	    = NOCOLOR;	    // for anything 'medium'
	var LOW		    = NOCOLOR;	    // for anything 'low'
	var VERY_LOW	    = NOCOLOR;	    // for anything 'low'

	var BW_VERY_HIGH    = NOCOLOR;	    // black & white
	var BW_HIGH	    = NOCOLOR;
	var BW_MEDIUM	    = NOCOLOR;
	var BW_LOW	    = NOCOLOR;
	var BW_VERY_LOW	    = NOCOLOR;

	var COVERED	    = NOCOLOR;	    // for anything marked/covered
	var COVERED_BG	    = NOCOLOR;	    
	var COVERED_FG	    = NOCOLOR;	    
	var UNREACHABLE	    = NOCOLOR;	    // for indicating unreachable

	var DANGER	    = NOCOLOR;
	var WARN	    = NOCOLOR;
	var SUCCESS	    = NOCOLOR;

	var SOURCE	    = NOCOLOR;
	var TARGET	    = NOCOLOR;

	var SEPARATOR	    = NOCOLOR;

	def enable() {
		DEFAULT		= TermColors.DEFAULT;
		LNO		= TermColors.BLUE;
		FUNC		= TermColors.WHITE;	   

		ACTIVE		= TermColors.WHITE;	    
		INACTIVE	= TermColors.GRAY1;	    

		COUNT		= TermColors.MAGENTA;	    

		VERY_HIGH	= TermColors.MAGENTA;	    
		HIGH		= TermColors.BRIGHTRED;	    
		MEDIUM		= TermColors.YELLOW;	    
		LOW		= TermColors.DEFAULT;	    
		VERY_LOW	= TermColors.LIGHTGRAY;	    

		BW_VERY_HIGH	= TermColors.GRAY14;	    
		BW_HIGH		= TermColors.GRAY10;	    
		BW_MEDIUM	= TermColors.GRAY7;	    
		BW_LOW		= TermColors.GRAY4;	    
		BW_VERY_LOW	= TermColors.GRAY1;	    

		COVERED		= TermColors.GREEN;	   
		COVERED_BG	= TermColors.BG_BRIGHTGREEN;	    
		COVERED_FG	= TermColors.BLACK;	    
		UNREACHABLE	= TermColors.GRAY1;	   

		DANGER		= TermColors.BRIGHTRED;
		WARN		= TermColors.YELLOW;
		SUCCESS		= TermColors.BRIGHTGREEN;

		SOURCE		= TermColors.BRIGHTCYAN;
		TARGET		= TermColors.YELLOW;

		SEPARATOR	= TermColors.UNDERLINE;
	}

	def disable() {
		DEFAULT		= NOCOLOR;
		LNO		= NOCOLOR;
		FUNC		= NOCOLOR;	   

		ACTIVE		= NOCOLOR;	    
		INACTIVE	= NOCOLOR;	    

		COUNT		= NOCOLOR;	    

		VERY_HIGH	= NOCOLOR;	    
		HIGH		= NOCOLOR;	    
		MEDIUM		= NOCOLOR;	    
		LOW		= NOCOLOR;	    
		VERY_LOW	= NOCOLOR;	    

		BW_VERY_HIGH    = NOCOLOR;
		BW_HIGH		= NOCOLOR;
		BW_MEDIUM	= NOCOLOR;
		BW_LOW		= NOCOLOR;
		BW_VERY_LOW	= NOCOLOR;

		COVERED		= NOCOLOR;	   
		COVERED_BG	= NOCOLOR;	    
		COVERED_FG	= NOCOLOR;	    
		UNREACHABLE	= NOCOLOR;	   

		DANGER		= NOCOLOR;
		WARN		= NOCOLOR;
		SUCCESS		= NOCOLOR;

		SOURCE		= NOCOLOR;
		TARGET		= NOCOLOR;

		SEPARATOR	= NOCOLOR;
	}
}
