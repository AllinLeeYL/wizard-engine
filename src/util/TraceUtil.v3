// Copyright 2023 Wizard Authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

component TraceUtil {
    // Renders a right-aligned string in a column of length `len`
    def renderRight(out: TraceBuilder, len: int, f: TraceBuilder -> void) {
        var str = TraceBuilder.new();
        f(str);
        for (i < len - str.length) {
            out.putc(' ');
        }
        out.puts(str.extract());
    }
    // Renders the decimal `dividend/divisor` to `prec` decimal places
    def renderFrac(out: TraceBuilder, dividend: long, divisor: long, prec: int) {
        var intVal = dividend / divisor;
        out.putd(intVal);
        out.putc('.');

        var base = 10;
        for (i < prec) {
            out.putd((dividend * base / divisor) % 10);
            base *= 10;
        }
    }
    def renderPct(out: TraceBuilder, dividend: long, divisor: long, prec: int) {
        TraceUtil.renderFrac(out, dividend * 100, divisor, prec);
        out.putc('%');
    }
    // Render `time` in microseconds as `0.xxxxxxs`
    def renderUs(out: TraceBuilder, time: long) {
        TraceUtil.renderFrac(out, time, 1000000, 6);
        out.putc('s');
    }
}