// Copyright 2019 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Main entrypoint of the Wizard Engine. Parses command-line arguments,
// loads files, and invokes actions on them.
component wizeng {
	var printVersion = false;
        var verbose = false;
	def main(args: Array<string>) -> int {
		if (UnitTests.list != null) return UnitTests.run(args);
        	var loaded = 0;

		// main argument processing loop
		for (a in args) {
                	if (a.length == 0) continue;
                        if (a[0] == '-') {
                        	if (!parseOption(a)) return 1;
                        } else if (Strings.endsWith(a, ".wasm")) {
                        	if (!loadWasmFile(a)) return 2;
                                loaded++;
                        } else if (Strings.endsWith(a, ".wat")) {
                        	if (!loadWatFile(a)) return 3;
                                loaded++;
                        } else {
                        	System.puts("Unrecognized file extension: ");
                                System.puts(a);
                                System.ln();
                                return 4;
                        }
                }
                
                if (loaded == 0 && !printVersion) {
                	System.puts("wizeng: no input files\n");
                        return 3;
                }
        	return 0;
        }
        def parseOption(arg: string) -> bool {
        	if (Strings.equals(arg, "-version")) {
                	printVersion = true;
                        System.puts("Wizard Engine Version ");
                        System.puti(Version.MAJOR);
                        System.puts(".");
                        System.puti(Version.MINOR);
                        System.ln();
                        System.puts("Copyright (c) 2019, Ben L. Titzer\n");
                        System.ln();
                        return true;
                }
                if (Strings.equals(arg, "-verbose")) {
                	verbose = true;
                        return true;
                }
                System.puts("Unknown option: ");
                System.puts(arg);
                System.ln();
        	return false;
        }
        def loadWasmFile(name: string) -> bool {
        	var data = System.fileLoad(name);
                if (data == null) {
                	System.puts("Could not load binary file: ");
                        System.puts(name);
                        System.ln();
                        return false;
                }
                var module = BinParser.new(Verbosity.VERBOSE, name).push(data, 0, data.length).finish();
		if (!module.ok()) {
			System.puts(name);
			System.puts(", ERROR @ +");
			System.puti(module.offset);
			System.puts(": ");
			System.puts(module.error_msg);
			System.ln();
		}
                return module.ok();
        }
        def loadWatFile(name: string) -> bool {
        	return false;
        }

}