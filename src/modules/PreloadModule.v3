// Copyright 2024 Wizard Authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

/*class PreloadModule extends ImportProcessor {
    def map = Strings.newMap<Exportable>();

    new(name: string, instance: Instance) super(name) {
        var exports = instance.module.exports;
        for (i < exports.length) {
            var name = exports[i].0;
            var exp_decl = exports[i].1;
            var exp_instance = instance.getDecl(exp_decl);
            if (exp_instance != null) {
                map[name] = exp_instance;
            }
        }
    }

    def preprocess(error: ErrorGen, module: Module, result: Array<Exportable>) {
        var imports = module.imports;
        for (j < imports.length) {
			var i = imports[j];
			if (result[j] != null) continue;                             
			if (!Strings.equal(this.name, i.imp.module_name)) continue; 
			var exportable = map[i.imp.field_name];
			if (exportable != null) {
				result[j] = exportable;
			}
		}
    }

    def instantiateImports(main_instance: Instance) {
        var imports = instance.module.imports;
        for (j < imports.length) {
            var i = imports[j];
            if (!Strings.equal())
        }
    }
}*/