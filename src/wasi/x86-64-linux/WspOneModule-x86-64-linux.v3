// Copyright 2021 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

def OUT = Trace.OUT;
def X = WspOneRegistration.register(X86_64Linux_WspOneModule.new());
def SYS_getrandom = 318;

// Platform-specific implementation of "wasi_snapshot_preview1" module.
class X86_64Linux_WspOneModule extends WspOneModule {

	def proc_exit(args: Array<Value>) -> HostResult {
		Linux.syscall(LinuxConst.SYS_exit, Values.v_i(args[0]));
		return HostResult.Value0;
	}
	def random_get(args: Array<Value>) -> HostResult {
		var ptr = Values.v_u(args[0]), len = Values.v_u(args[1]);
		var range = getRegion3(ptr, len);
		if (range.0 == Pointer.NULL) return HostResult.Trap(TrapReason.MEM_OUT_OF_BOUNDS);
		var t = Linux.syscall(SYS_getrandom, (range.0, len, 0));
		if (t.0 < 0) return i(mapErrno(t.0));
		return HostResult.Value1(Values.I32_0);
	}
	def mapErrno(errno: i64) -> int {
		return int.!(errno);
	}
	def getRegion3(ptr: u32, len: u32) -> (Pointer, Pointer) {
		if (!X86_64Memory.?(memory)) return (Pointer.NULL, Pointer.NULL);
		return X86_64Memory.!(memory).range(ptr, len);
	}
}
